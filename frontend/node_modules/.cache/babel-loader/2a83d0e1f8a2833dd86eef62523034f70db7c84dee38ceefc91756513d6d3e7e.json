{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[message,setMessage]=useState('');useEffect(()=>{fetch('/api').then(res=>res.text()).then(data=>setMessage(data)).catch(err=>console.error('Error fetching from backend:',err));},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"React + Express + Postgres App\"}),/*#__PURE__*/_jsx(\"p\",{children:message?message:'Loading...'})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","App","message","setMessage","fetch","then","res","text","data","catch","err","console","error","children"],"sources":["C:/Users/ASUS/fullstack-docker-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('/api')\r\n      .then((res) => res.text())\r\n      .then((data) => setMessage(data))\r\n      .catch((err) => console.error('Error fetching from backend:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>React + Express + Postgres App</h1>\r\n      <p>{message ? message : 'Loading...'}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACdS,KAAK,CAAC,MAAM,CAAC,CACVC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKL,UAAU,CAACK,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEF,GAAG,CAAC,CAAC,CACvE,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,KAAA,QAAAa,QAAA,eACEf,IAAA,OAAAe,QAAA,CAAI,gCAA8B,CAAI,CAAC,cACvCf,IAAA,MAAAe,QAAA,CAAIX,OAAO,CAAGA,OAAO,CAAG,YAAY,CAAI,CAAC,EACtC,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}